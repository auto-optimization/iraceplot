# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
on:
  push:
    branches: [main, master]
  pull_request:
    branches:  [main, master]

name: R-CMD-check

env:
  R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
  _R_CHECK_FORCE_SUGGESTS_: false
  _R_CHECK_CRAN_INCOMING_REMOTE_: false
  R_KEEP_PKG_SOURCE: yes

jobs:
  R-CMD-check:

    if: "! contains(github.event.head_commit.message, '[skip ci]')"

    runs-on: ${{ matrix.config.os }}

    name: Check ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}
          - {os: macOS-latest, r: 'release'}
          - {os: ubuntu-20.04, r: '3.6'}
          - {os: ubuntu-20.04, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
          - {os: ubuntu-20.04, r: 'devel', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
    env:
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      
    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-pandoc@v2
        
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check
          cache-version: 1

      - name: Check (CRAN)
        if: success()
        env:
          NOT_CRAN: false
        run: |
          options(crayon.enabled = TRUE)
          rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Check (NOT CRAN)
        if: success()
        env:
          NOT_CRAN: true
        run: |
          options(crayon.enabled = TRUE)
          rcmdcheck::rcmdcheck(args = c("--no-manual", "--run-donttest","--timings"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

      - uses: r-lib/actions/setup-r-dependencies@v2
        if: success() && runner.os == 'Linux' && matrix.config.r == 'release'
        with:
          extra-packages: any::pkgdown any::remotes
          needs: website

      - name: Install package
        if: success() && runner.os == 'Linux' && matrix.config.r == 'release'
        run: |
          remotes::install_local(".", build = TRUE, upgrade = "never", force = TRUE, build_opts = c("--no-resave-data"), build_manual = TRUE, build_vignettes = TRUE)
        shell: Rscript {0}

      - name: Deploy package
        if: success() && runner.os == 'Linux' && matrix.config.r == 'release'
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          Rscript -e 'pkgdown::deploy_to_branch(new_process = FALSE)'

      - name: Test coverage
        if: success() && runner.os == 'Linux' && matrix.config.r == 'release'
        run: |
          remotes::install_cran('covr')
          covr::codecov(type="all", quiet=FALSE)
        shell: Rscript {0}


