# For help debugging build failures open an issue on the RStudio community with the 'github-actions' tag.
# https://community.rstudio.com/new-topic?category=Package%20development&tags=github-actions
on:
  push:
    branches: [main, master]
  pull_request:
    branches:  [main, master]

name: R-CMD-check

concurrency:
  group: ${{ github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

env:
  R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
  _R_CHECK_FORCE_SUGGESTS_: false
  _R_CHECK_CRAN_INCOMING_REMOTE_: false
  R_KEEP_PKG_SOURCE: yes

jobs:
  R-CMD-check:

    if: "! contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ${{ matrix.os }}
    name: Check ${{ matrix.os }} (${{ matrix.r }})

    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest, macos-13, macos-14, ubuntu-22.04 ]
        # 4.0 is the minimum supported version.
        r: [ release, 4.0 ]
        include:
          # Use latest ubuntu to make it easier to install dependencies
          - { os: ubuntu-24.04, r: 'devel', http-user-agent: 'release' }
          
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      
    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2
        
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.r }}
          http-user-agent: ${{ matrix.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check
          cache-version: 1

      - name: Check (NOT CRAN)
        if: success()
        env:
          NOT_CRAN: true
        run: |
          options(crayon.enabled = TRUE)
          rcmdcheck::rcmdcheck(args = c("--no-manual", "--run-donttest","--timings"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Check (CRAN)
        if: success()
        env:
          NOT_CRAN: false
        run: |
          options(crayon.enabled = TRUE)
          rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Show testthat output
        if: failure()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash
        
      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: ${{ runner.os }}-r${{ matrix.r }}-results
          path: check

      - uses: r-lib/actions/setup-r-dependencies@v2
        if: ${{ success() && runner.os == 'Linux' && matrix.r == 'release' && github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')  }}
        with:
          extra-packages: any::pkgdown any::remotes local::.
          needs: website

      - name: Deploy package
        if: ${{ success() && runner.os == 'Linux' && matrix.r == 'release' && github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main')  }}
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          Rscript -e 'pkgdown::deploy_to_branch(new_process = FALSE, run_dont_run = TRUE)'

      - name: Test coverage
        if: success() && runner.os == 'Linux' && matrix.r == 'release'
        run: |
          remotes::install_cran('covr')
          covr::codecov(type="all", quiet=FALSE, commentDonttest = FALSE)
        shell: Rscript {0}


